@import "react-data-grid/lib/styles.css";
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 5.9% 10%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 0 0% 98%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
    .text-balance {
        text-wrap: balance;
    }
}

/* Apply theme awareness */
.theme-aware {
  background-color: var(--color-background);
  color: var(--color-foreground);
  border-color: var(--color-border);
}

/* Override shadcn/ui variables to use theme variables */
:root {
  --primary: var(--color-primary);
  --secondary: var(--color-secondary);
  --accent: var(--color-accent);
  --background: var(--color-background);
  --foreground: var(--color-foreground);
  --muted: var(--color-muted);
  --border: var(--color-border);
}

.skeleton {
    pointer-events: none !important;
}

.skeleton *[class^="text-"] {
    color: transparent;
    border-radius: 0.375rem;
    background-color: rgba(var(--foreground-rgb), 0.2);
    user-select: none;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.skeleton .skeleton-bg {
    background-color: rgba(var(--foreground-rgb), 0.1);
}

.skeleton .skeleton-div {
    background-color: rgba(var(--foreground-rgb), 0.2);
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.ProseMirror {
    outline: none;
}

.cm-editor,
.cm-gutters {
    background-color: hsl(var(--background)) !important;
    outline: none !important;
}

.dark .cm-editor,
.dark .cm-gutters {
    background-color: rgb(39 39 42) !important;
}

.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground,
.cm-selectionBackground,
.cm-content::selection {
    background-color: rgb(228 228 231) !important;
}

.dark .cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground,
.dark .cm-selectionBackground,
.dark .cm-content::selection {
    background-color: rgb(39 39 42) !important;
}

.cm-activeLine,
.cm-activeLineGutter {
    background: transparent !important;
}

.cm-activeLine {
    border-start-end-radius: 0.125rem !important;
    border-end-end-radius: 0.125rem !important;
}

.cm-lineNumbers {
    min-inline-size: 1.75rem;
}

.cm-foldGutter {
    min-inline-size: 0.75rem;
}

.cm-lineNumbers .cm-activeLineGutter {
    border-start-start-radius: 0.125rem !important;
    border-end-start-radius: 0.125rem !important;
}

.suggestion-highlight {
    background-color: rgb(219 234 254);
    color: rgb(30 58 138);
}

.suggestion-highlight:hover {
    background-color: rgb(147 197 253);
}

.dark .suggestion-highlight {
    background-color: rgba(59 130 246, 0.4);
    color: rgb(219 234 254);
}

.dark .suggestion-highlight:hover {
    background-color: rgba(59 130 246, 0.5);
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}